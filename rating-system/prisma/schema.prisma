generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user_type   UserType?
  candidate   Candidate?
  participant Participant?
  admin       Admin?
  token       String?
}

model UserType {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  type      UserTypes @default(CANDIDATE)
  user      User      @relation(fields: [user_id], references: [id])
  user_id   String    @unique @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum UserTypes {
  ADMIN
  PARTICIPANT
  CANDIDATE
}

model Session {
  id           String                 @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  date         DateTime               @default(now())
  is_active    Boolean                @default(true)
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
  criterias    CriteriaOnSession[]
  candidates   CandidateOnSession[]
  participants ParticipantOnSession[]
  rating       Rating?
}

model Criteria {
  id          String              @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  weight      Int                 @default(1)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  sessions    CriteriaOnSession[]
  rating      Rating?
}

model CriteriaOnSession {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  session     Session  @relation(fields: [session_id], references: [id])
  session_id  String   @unique @db.ObjectId
  criteria    Criteria @relation(fields: [criteria_id], references: [id])
  criteria_id String   @unique @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Candidate {
  id        String               @id @default(auto()) @map("_id") @db.ObjectId
  user      User                 @relation(fields: [user_id], references: [id])
  user_id   String               @unique @db.ObjectId
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  sessions  CandidateOnSession[]
  rating    Rating?
}

model CandidateOnSession {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  session      Session   @relation(fields: [session_id], references: [id])
  session_id   String    @unique @db.ObjectId
  candidate    Candidate @relation(fields: [candidate_id], references: [id])
  candidate_id String    @unique @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Participant {
  id        String                 @id @default(auto()) @map("_id") @db.ObjectId
  user      User                   @relation(fields: [user_id], references: [id])
  user_id   String                 @unique @db.ObjectId
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  sessions  ParticipantOnSession[]
  Rating    Rating?
}

model ParticipantOnSession {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  session        Session     @relation(fields: [session_id], references: [id])
  session_id     String      @unique @db.ObjectId
  participant    Participant @relation(fields: [participant_id], references: [id])
  participant_id String      @unique @db.ObjectId
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Rating {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  score          Int
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  candidate      Candidate   @relation(fields: [candidate_id], references: [id])
  candidate_id   String      @unique @db.ObjectId
  participant    Participant @relation(fields: [participant_id], references: [id])
  participant_id String      @unique @db.ObjectId
  criteria       Criteria    @relation(fields: [criteria_id], references: [id])
  criteria_id    String      @unique @db.ObjectId
  session        Session     @relation(fields: [session_id], references: [id])
  session_id     String      @unique @db.ObjectId
}
